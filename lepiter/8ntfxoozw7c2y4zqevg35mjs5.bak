{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:29:01.178087-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:45:02.204774-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "BYWhn3LjDQCQBGB9DBFOkg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Collections are the last thing to cover in this chapter. Collections are classes in smalltalk that support iteration. *Note: if you want to support these methods, you can just define them for a different class as well.* For more information check out the named page in gt, Working with collections. You can find this by searching with the global spotter for this page. (shift + enter to open)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:08.874752-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:12.967536-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xJP4sXLjDQCG2bYmAzcZ4w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Building Collections"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:30:46.291973-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:36:35.98516-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YZjBpXLjDQCPApQTBhiN6A=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Collections can be built in pharo in 3 ways. Dynamic arrays are built with curly braces.  Where each expression is an item in the collection. So we use periods to seperate them."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:02.107026-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:19.752581-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "DuRLvHLjDQCmTxaMDu2dog=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**NOTE: The literal syntax we are using produces arrays, not lists. So these arrays can't be resized**"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:31:15.525854-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:31:24.687295-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zHqjp3LjDQCSMdbVBhiN6A=="
				},
				"code" : "aDynamicCollection := {1. 2. 3.}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:33:38.871143-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:37.820166-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "drkusHLjDQCD/zMVDUSS1w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We can also build static sized arrays, using a hash before parens. And each element of the array is seperated by a space."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:49.03519-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:49.03519-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gPQXv3LjDQCyzCFrA/zXsA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This is less important to know about right now though. But useful if you come across them. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:31:46.338617-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:37:51.221491-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "LaZ5qXLjDQCU4+DmBhiN6A=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Note that all items in static arrays must have known compile time sizes. So if you use a variable inside of a static array, it is treated as a symbol, rather than the value of the variable.**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:33:46.354599-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:33:54.26565-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cPKgsHLjDQCECwldDUSS1w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you have ever worked with lisp, it's similar to a quoted list."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:32:17.321429-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:33:22.135024-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "g2lSq3LjDQCYbA5lBhiN6A=="
				},
				"code" : "aStaticArray := #(1 2 'Hello' hello)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:38:33.251847-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:52:22.018242-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0ae6wXLjDQCRbzpRA1zL/Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "And finally we can just build new instances of collections using the class name directly. For example {{gtClass:OrderedCollection}}."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:45:21.238635-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:52:28.32174-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7gkM2nLjDQCVWR3hAKJCmQ=="
				},
				"code" : "aCollection := OrderedCollection new\r\tadd: 1;\r\tadd: 2;\r\tadd: 3.\r\t\r\"we can also build them from a static array\".\ranotherCollection := OrderedCollection newFrom: {1. 2. 3}.\r\"Another way of doing this\"\ranotherCollectionKind := {1. 2. 3.} asOrderedCollection.\r\r\"dictionaries can also be built from a list of associations\"\r\r\"associations can be built with the -> method\".\ranAssociation := 1 -> 3.\r\raDictionary := Dictionary new\r\tat: 'a' put: 1;\r\tat: 'b' put: 2;\r\tyourself.\r\t\ranotherDictionary := {\r\t'a' -> 1.\r\t'b' -> 2.\r\t} asDictionary.\r\t\r\"we can also make sets\"\raSet := {1. 1. 2. 3. 4.} asSet.\r\t\r{aCollection. anotherCollection. anotherCollectionKind. aDictionary. anotherDictionary. aSet}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:16.691867-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:21.879207-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gNtvsnLjDQCHUTmGAzcZ4w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Working with collections"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:22.001091-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:28.549714-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JeHAsnLjDQCH8QbLAzcZ4w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Collections have a lot of methods, but the most important ones are:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-11-16T16:35:33.615749-08:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-11-16T16:40:06.631603-08:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jp0Ft3LjDQCOlm0DAzcZ4w=="
							},
							"code" : "aCollection := {1. 2. 3.}.\raNewCollection := OrderedCollection new.\r\raCollection do: [:each | \r\taNewCollection add: each + 1.\r].\r\raNewCollection"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:34:31.972772-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:38:08.71185-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PwZZs3LjDQCJQVj/AzcZ4w=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`do:` which is similar to for each in other languages. It takes a block with a single argument, and iterates over the collection, calling the block with the current value we are iterating for."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:39:17.208679-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:39:40.473062-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UyDCw3LjDQCq1CUFDsaoqQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`collect:` which is similar to map in other languages. It works the same as `do:`, but it will return a new collection."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:39:42.707161-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:40:01.978803-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "BHbexXLjDQCto0KFDsaoqQ=="
				},
				"code" : "aCollection := {1. 2. 3.}.\raCollection collect: [:each | each + 1]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:40:10.853018-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:41:02.499456-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "g+2Lx3LjDQCvGtvbDsaoqQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`select:` is similar to filter in other langauges. It builds a new collection, by applying a block with a single argument, and includes that value inside the new collection, if the block returns true. Otherwise it skips that item from the new collection."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:41:04.515487-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:41:40.855796-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "W8G+ynLjDQC0oS5BDsaoqQ=="
				},
				"code" : "aCollection := {1. 2. 3.}.\raCollection select: [:each | each odd ]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:52:59.721744-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:55:22.924912-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "b/Ff9XLjDQC/1wbhAc/JNw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**NOTE: When sending unary messages to collections. We can use the symbol literal for the message, instead of a block. The following is the same as above**"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:54:45.661642-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:55:15.396224-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+XGw+3LjDQClsyRaAs+fNg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The reason this is possible, is that a symbol implements the `value:` message. Which means we can use it wherever we can use a single argument block."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:53:26.748971-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:53:52.769825-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "S1L89nLjDQCCyCgpAc/JNw=="
				},
				"code" : "aCollection := {1. 2. 3.}.\raCollection select: #odd"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:41:48.913464-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:43:26.065506-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5zRkzXLjDQC4/vvHBR4gaQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`inject:into:` is like reduce or fold in other languages. the inject keyword is the starting value of the accumulation. And the into keyword is a block, taking in the current value for the accumulator, and the current item we are iterating over."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:43:28.188491-08:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-11-16T16:43:49.549717-08:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "OAFP03LjDQC/faLnBR4gaQ=="
				},
				"code" : "aCollection := {1. 2. 3.}.\raCollection inject: 0 into: [:acc :each | acc + each ]"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-11-16T16:29:01.135785-08:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-11-16T16:29:01.135785-08:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Chapter 1.7: Collections"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "a5dea09f-72e3-0d00-9003-02130c114e92"
	}
}